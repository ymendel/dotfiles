[user]
	name = Yossef Mendelssohn
	email = ymendel@pobox.com
[alias]
	aliases = !git config --list | grep 'alias.' | sed 's/^alias.//' | sed 's/=/ => /'
	ci = commit
	cia = !git add --all && git commit --all
	cie = commit --allow-empty
	astc = commit --amend --no-edit
	aatc = !git add --all && git commit --all --amend --no-edit
	co = checkout
	staged = diff --cached
	pending = diff --cached
	unstage = reset HEAD
	uncommit = reset --soft HEAD^
	rmcommit = reset HEAD^
	undo = !sh -c 'git revert --no-commit ${1:-HEAD}' -
	export = !sh -c 'git clone --depth 1 $1 && rm -fr `expr \"$1\" : \".*[:/]\\([a-zA-Z_]*\\).git\"`/.git' -
	x = !gitx
	hack = !hack
	ship = !ship
	deleted = log --oneline --diff-filter=D --
	logd = log --oneline --decorate
	logg = log --graph --pretty=format:'%C(yellow)%h%C(reset) -%C(cyan)%d%C(reset) %s %Cgreen(%cr) %C(bold blue)<%an>%C(reset)' --abbrev-commit --date=relative
	bw = branch --contains
	diffw = diff --word-diff
	ri = rebase --interactive
	ria = rebase --interactive --autosquash
	fixup = commit --fixup
	squash = commit --squash
	amend = commit --amend
	reword = commit --only --amend
	redact = filter-branch
	retcon = filter-branch
	setup = !sh -c 'git clone $1 && cd `expr \"$1\" : \".*[:/]\\([a-zA-Z_]*\\).git\"` && git checkout -b work' -
	top = rev-parse --show-toplevel
	ctags = !.git/hooks/ctags
	st = status
	sts = status --short --branch
	stat = !git diff --stat $(git merge-base HEAD \"$REVIEW_BASE\")
	files = !git diff --name-only $(git merge-base HEAD \"$REVIEW_BASE\")
	gob = !git fetch origin +$1:$1
	fetch-branch = !git fetch origin $1:$1
	re-main = !git fetch-branch $MAIN_BRANCH
	re = !git re-main
	main = !git checkout $MAIN_BRANCH
	pause = !git add --all && git commit --all --no-verify --message 'PAUSED: Use `git resume` to continue working.'
	paused = !git log -1 --format="%s" | grep -q '^PAUSED: '
	resume = !git paused && git rmcommit
	merged = !sh -c 'git merge-base --is-ancestor ${1:-HEAD} ${2:-$MAIN_BRANCH}' -
	clean-merged = !git branch --merged $MAIN_BRANCH --format='%(refname:short)' | grep -v "^${MAIN_BRANCH}$" | xargs git branch -d
	branch-exists = show-ref --quiet --heads
[color]
	status = auto
	diff = auto
	branch = auto
	interactive = auto
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[github]
	user = ymendel
	password = !security 2>&1 >/dev/null find-generic-password -gs github.password | ruby -e 'print $1 if STDIN.gets =~ /^password: \\\"(.*)\\\"$/'
[hub]
	protocol = https
[credential]
	helper = osxkeychain
[init]
	defaultBranch = main
	templatedir = ~/.dotfiles/git/template
[include]
    path = ~/.gitconfig.local
[pull]
	rebase = false
