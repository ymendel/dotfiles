#!/usr/bin/env bash
#
# This script handles installation, updates, and the like.
# Run it periodically to make sure you're on the latest and greatest.

set -e

command="$(basename $0)"
parentDir="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd -P)"
dotfilesDir="$(cd "$( dirname "$parentDir" )" && pwd -P)"

displayUsageAndExit() {
    echo "$command -- dotfiles management"
    echo ""
    echo "Usage: $command [options]"
    echo ""
    echo "Options:"
    echo "  -e, --edit    Open dotfiles directory for editing"
    echo "  -h, --help    Show this help message and exit"
    exit
}

while test $# -gt 0; do
    case "$1" in
        "-h"|"--help")
            displayUsageAndExit
            ;;
        "-e"|"--edit")
            exec "$EDITOR" "$dotfilesDir"
            exit
            ;;
        *)
            echo "Invalid option: $1"
            displayUsageAndExit
            ;;
    esac
    shift
done

# prompt for password immediately, instead of waiting for later
sudo -v

# keep-alive: update existing `sudo` time stamp until this command is done
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

export DOTFILES_HOME="$HOME/.dotfiles"

# Install homebrew
$DOTFILES_HOME/homebrew/install.sh 2>&1

# Upgrade homebrew
echo "› brew update"
brew update

profiles=('standard')
profiles+=($(cat "$HOME/.local/machine_profiles" 2>/dev/null))
for profile in ${profiles[@]}
do
    brewfile="$DOTFILES_HOME/homebrew/Brewfile.${profile}"
    if [[ -f $brewfile ]]
    then
        echo "› brew bundle ${profile}"
        brew bundle install --file=$brewfile --no-upgrade
    fi
done

brewfile="$HOME/.local/Brewfile"
if [[ -f $brewfile ]]
then
    echo "› brew bundle local"
    brew bundle install --file=$brewfile --no-upgrade
fi

# Install software
echo "› $DOTFILES_HOME/script/install"
$DOTFILES_HOME/script/install

# send EOT to let bootstrap know we're done
echo -e '\x04'
